@page "/reports/product"

@using Humanizer

@inject ISearchProductTransactionsUseCase SearchProductTransactionsUseCase

<h3>Product Transactions Report</h3>
<br />

<div class="row">
    <div class="col">
        <label for="product">Product Name</label>
        <input id="product" type="text" class="form-control" @bind-value="productName" />
    </div>
    <div class="col">
        <label for="dateFrom">Date From</label>
        <input id="dateFrom" type="date" class="form-control" @bind-value="dateFrom" max="@((dateTo.HasValue) ? @dateTo?.ToString("O") : today.ToString("O"))" />
    </div>
    <div class="col">
        <label for="dateTo">Date To</label>
        <input id="dateTo" type="date" class="form-control" @bind-value="dateTo" min="@dateFrom?.ToString("O")" max="@today.ToString("O")" />
    </div>
    <div class="col">
        <label for="activityType">Activity Type</label>
        <select id="activityType" class="form-control" @bind="searchType">
            @foreach (Enum transactionType in Enum.GetValues(typeof(ProductTransactionSearchType)))
            {
                <option value="@transactionType">@transactionType.Humanize()</option>
            }   
        </select>
    </div>
    <div class="col">
        <label>&nbsp;</label>
        <button type="button" class="btn btn-primary form-control" @onclick="Search">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
            </svg>
            Search
        </button>
    </div>
</div>
@if (productTransactions != null)
{
    <table class="table mt-3">
        <thead>
            <tr>
                <th>Date</th>
                <th>Product</th>
                <th>Activity</th>
                <th>Qty Before</th>
                <th>Qty After</th>
                <th>Production #</th>
                <th>SO#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in productTransactions)
            {
                <tr>
                    <td>@transaction.TransactionDate.ToString("MM/dd/yyyy")</td>
                    <td>@transaction.Product.ProductName</td>
                    <td>@transaction.ActivityType.Humanize()</td>
                    <td>@transaction.QuantityBefore</td>
                    <td>@transaction.QuantityAfter</td>
                    <td>@transaction.ProductionNumber</td>
                    <td>@transaction.SalesOrderNumber</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private static DateOnly today = DateOnly.FromDateTime(DateTime.Now);

    private string? productName;
    private DateOnly? dateFrom;
    private DateOnly? dateTo;
    private ProductTransactionSearchType searchType;

    private IEnumerable<ProductTransaction>? productTransactions;

    private async Task Search() 
    {
        productTransactions = await SearchProductTransactionsUseCase.ExecuteAsync(
            productName,
            dateFrom,
            dateTo,
            searchType
        );
    }
}

@using IMS.CoreBusiness

<SearchComponent Placeholder="Type inventory name here to search" ActionText="View" OnSearch="SearchInventoryAsync"></SearchComponent>

@if (Inventories != null && selectedInventory == null)
{
    <div class="inventory-list-container">
        <ul class="inventory-list">
            @foreach (Inventory inventory in Inventories)
            {
                <li 
                    class="inventory-list__item" 
                    @onclick="() => SelectInventoryAsync(inventory)"
                    @key="inventory.InventoryId">
                        @inventory.InventoryName
                </li>
            }
        </ul>
    </div>
}

@code {
    [Parameter]
    public IReadOnlyList<Inventory>? Inventories { get; set; }

    [Parameter]
    public EventCallback<string> OnSearchInventory { get; set; }

    [Parameter]
    public EventCallback<Inventory> OnSelectInventory { get; set; }

    private Inventory? selectedInventory;

    private async Task SearchInventoryAsync(string inventoryNameToSearch)
    {
        this.selectedInventory = null;

        string searchParameter = inventoryNameToSearch ?? "";
        await OnSearchInventory.InvokeAsync(searchParameter);
    }

    private async Task SelectInventoryAsync(Inventory inventory)
    {
        this.selectedInventory = inventory;
        await OnSelectInventory.InvokeAsync(inventory);
    }
}

<style>
    .inventory-list-container {
        overflow-y: auto;
        max-height: 300px;
    }
    .inventory-list__item {
        cursor: pointer;
    }
</style>